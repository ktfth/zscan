#!/usr/bin/env node
'use strict';
const net = require('net');

let timeout = 10000;

function resolve(host, port, cb=() => {}) {
  return net.connect({
    port: port,
    host: host,
  }, cb);
}

function isPortOpen(host, port, cb=() => {}) {
  return resolve(host, port, () => {
    console.log(`${port} open`);
    cb();
  });
}

let args = process.argv.slice(2);
let showedIpAddress = false;

if (args.length === 2 && /\-/.test(args[1])) {
  let params = args[1].split('-').map(v => v.trim()).map(v => parseInt(v, 10));
  let start = Math.max(1, params[0]);
  let end = Math.max(1, params[1]);

  for (let port = start; port <= end; port += 1) {
    const s = net.createConnection(port, args[0]);

    s.on('connect', () => {
      if (!showedIpAddress) {
        console.log(`${args[0]} (${s.remoteAddress})`);
        showedIpAddress = true;
      }
      console.log(`${port} open`);
      if (!s.destroyed) {
        s.destroy();
      }
    });

    s.on('error', () => {
      if (!s.destroyed) {
        s.destroy();
      }
    });

    s.setTimeout(timeout);
    s.on('timeout', () => {
      if (!s.destroyed) {
        s.destroy();
      }
    });
  }
}
